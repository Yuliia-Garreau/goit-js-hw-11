{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// зберігай функції для HTTP - запитів.\n\n// import inputValue from \".//m\"\n\n\nexport const fetchImages = (search) => {\n\n    const searchParams = new URLSearchParams({\n        key: \"47281419-922d6d2c66ee391f8ff42b6d3\", \n        q: search,\n        image_type: \"photo\",\n        orientation: \"horizontal\",\n        safesearch: true,\n    });\n  \n \n    const url = `https://pixabay.com/api/?${searchParams}`;\n    \n    const options = {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        Host: 'http://localhost:5173',\n        Origin: 'https://pixabay.com/api',\n      },\n    };\n\n  return fetch(\n    url, options)\n    .then((response) => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\n\n\n\n","// створи функції для відображення елементів інтерфейсу.\n\n// function createMarkup() {\n\n// }\n\n// export const renderImages = images => {\n//   return images\n//     .map(\n//       image => `\n//     <li class='gallery-item'>\n//       <a href=${image.largeImageURL}>\n//         <img alt=${image.tags} src=${image.webformatURL} class='gallery-image'/>\n//       </a>\n\nexport const renderImages = (images) => {\n        return images\n      .map(\n        image => `\n          <li class=\"item-gallery\">\n          <a class=\"link-gallery\" href=\"${image.largeImageURL}\">\n            <img  \n            class=\"img-gallery\"\n              src=\"${image.webformatURL}\" \n              alt=\"${image.tags}\"\n            />\n          </a>\n            <ul>\n              <li>\n                <p class=\"likes\">Likes\n                  <span>${image.likes}</span>\n                </p>\n              </li>\n              <li>\n                <p class=\"views\">Views\n                  <span>${image.views}</span>\n                </p>\n              </li>\n              <li>\n                <p class=\"comments\">Comments\n                  <span>${image.comments}</span>\n                </p>\n              </li>\n              <li>\n                <p class=\"downloads\">Downloads\n                  <span>${image.downloads}</span>\n                </p>\n              </li>\n            </ul>\n          </li>\n        \n      `)\n    .join(\"\");\n    // gallery.insertAdjacentHTML(\"beforeend\", markup);\n    console.log(typeof (images));\n    \n}\n\n// {\n//src \"webformatURL\": \"https://pixabay.com/get/g836fdef8f051e950db41d2f551acecd2701bd5d847f859e1449b4a34561997fe8e045015cc53aff6842324b54753bd512cd869e4cda38e7a5d3b79001e604ee8_640.jpg\",\n//href \"largeImageURL\": \"https://pixabay.com/get/g63cd19c97221e6e15a821bfe54e56393e6e786f2f49f0cb21c05f41ceb54a547593d524f105508de0d3bc050e297f957d94ee8ffdba49a5aa345c7ba1bcb0cf8_1280.jpg\",\n//alt \"tags\": \"cat, animal, nature\",\n// \"likes\": 1990,\n// \"views\": 868179,\n// \"comments\": 336,\n// \"downloads\": 543018,\n\n//   \"id\": 1045782,\n//   \"pageURL\": \"https://pixabay.com/photos/cat-animal-cat-portrait-cats-eyes-1045782/\",\n//   \"type\": \"photo\",  \n//   \"previewURL\": \"https://cdn.pixabay.com/photo/2015/11/16/14/43/cat-1045782_150.jpg\",\n//   \"previewWidth\": 150,\n//   \"previewHeight\": 102,  \n//   \"webformatWidth\": 640,\n//   \"webformatHeight\": 437,  \n//   \"imageWidth\": 2064,\n//   \"imageHeight\": 1410,\n//   \"imageSize\": 1268850,  \n//   \"collections\": 24102,\n//   \"user_id\": 127419,\n//   \"user\": \"cocoparisienne\",\n//   \"userImageURL\": \"https://cdn.pixabay.com/user/2023/10/15/14-40-46-737_250x250.jpeg\"\n// },\n","// напиши всю логіку роботи додатка.\nimport { fetchImages } from './js/pixabay-api';\nimport { renderImages } from './js/render-functions';\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n// import SimpleLightbox from \"simplelightbox\";\n// import \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\n// const makeMessage = username => {\n//   return `Welcome, ${username}!`;\n// };\n// export default makeMessage;\n// import makeMessage from './makeMessage';\n// console.log(makeMessage('Jacob')); // \"Welcom, Jacob!\"\n\n// export const makeMessage = username => {\n//   return `Welcome, ${username}!`;\n// };\n// export const levels = ['easy', 'medium', 'hard'];\n// import { makeMessage, levels } from './makeMessage';\n// console.log(makeMessage('Jacob')); // \"Welcom, Jacob!\"\n// console.log(levels); // [\"easy\", \"medium\", \"hard\"]\n\nconst form = document.querySelector('.form-search');\nconst gallery = document.querySelector('.gallery-list');\n\niziToast.settings({\n  timeout: 1000,\n  position: 'topRight',\n  });\n\n//   form.addEventListener('submit', (event) => {\n   \n//    event.preventDefault();\n//     const inputValue = event.target.elements.input.value.trim();\n    \n   \n//     fetchImages(inputValue)\n//     .then((images) => renderImages(images))\n//     .catch((error) => console.log(error));\n  \n    \n//   });\n// console.log(fetchImages());\n\n// if (inputValue === '') {\n//       iziToast.warning({\n//         title: 'Caution',\n//         message: 'The field is empty, please type your request',\n//     });\n//       return console.log('empty');\n//     }\n//       console.log(inputValue);\n\n// gallery.insertAdjacentHTML(\"beforeend\", fetchImages)\n\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const inputValue = event.target.elements.input.value.trim();\nconsole.log(event);\n\n  if (inputValue === '') {\n    iziToast.warning({\n      title: 'Caution',\n      message: 'The field is empty, please type your request',\n  });\n    return console.log('empty');\n  }\n    console.log(inputValue);\n\n    fetchImages(inputValue)\n      .then((response) => {\n  if (response.total === 0) {\n            iziToast.error({\n              // title: 'Error',\n              message: 'Sorry, there are no images matching your search query. Please try again!',\n            });\n            return;\n      }})\n      .then((response) => renderImages(response))\n      \n    fetchImages(inputValue)\n    console.log(fetchImages(inputValue));\n    \n        iziToast.settings({\n      timeout: 1000,\n      position: 'topRight',\n      });\nconsole.log(renderImages(inputValue));\n}\ngallery.insertAdjacentHTML(\"beforeend\", fetchImages)\n\nconsole.log(typeof (gallery.insertAdjacentHTML(\"beforeend\", fetchImages)));\n\n"],"names":["fetchImages","search","url","response","renderImages","images","image","form","gallery","iziToast","handleSubmit","event","inputValue"],"mappings":"ivBAKO,MAAMA,EAAeC,GAAW,CAWnC,MAAMC,EAAM,4BATS,IAAI,gBAAgB,CACrC,IAAK,qCACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACpB,CAAK,CAGmD,GAWtD,OAAO,MACLC,EAVgB,CACd,OAAQ,MACR,QAAS,CACP,OAAQ,mBACR,KAAM,wBACN,OAAQ,yBACT,CACP,CAGgB,EACX,KAAMC,GAAa,CACpB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,MAAM,EAEjC,OAAOA,EAAS,MACpB,CAAG,CACH,ECpBaC,EAAgBC,GACdA,EACR,IACCC,GAAS;AAAA;AAAA,0CAEyBA,EAAM,aAAa;AAAA;AAAA;AAAA,qBAGxCA,EAAM,YAAY;AAAA,qBAClBA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAMLA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,0BAKXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,0BAKXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAKdA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMlC,EACF,KAAK,EAAE,ECzBNC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAU,SAAS,cAAc,eAAe,EAEtDC,EAAS,SAAS,CAChB,QAAS,IACT,SAAU,UACZ,CAAG,EA4BHF,EAAK,iBAAiB,SAAUG,CAAY,EAE5C,SAASA,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EACpB,MAAMC,EAAaD,EAAM,OAAO,SAAS,MAAM,MAAM,OAGrD,GAFF,QAAQ,IAAIA,CAAK,EAEXC,IAAe,GACjB,OAAAH,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,8CACf,CAAG,EACQ,QAAQ,IAAI,OAAO,EAE1B,QAAQ,IAAIG,CAAU,EAEtBZ,EAAYY,CAAU,EACnB,KAAMT,GAAa,CACxB,GAAIA,EAAS,QAAU,EAAG,CAChBM,EAAS,MAAM,CAEb,QAAS,0EACvB,CAAa,EACD,MACZ,CAAO,CAAC,EACD,KAAMN,GAAaC,EAAaD,CAAQ,CAAC,EAE5CH,EAAYY,CAAU,EACtB,QAAQ,IAAIZ,EAAYY,CAAU,CAAC,EAE/BH,EAAS,SAAS,CACpB,QAAS,IACT,SAAU,UAChB,CAAO,EACP,QAAQ,IAAIL,EAAaQ,CAAU,CAAC,CACpC,CACAJ,EAAQ,mBAAmB,YAAaR,CAAW,EAEnD,QAAQ,IAAI,OAAQQ,EAAQ,mBAAmB,YAAaR,CAAW,CAAE"}